name: Backend tests

on:
  push:
  pull_request:
    branches: [ main, dev ]

jobs:
  backend-db-test:
    runs-on: ubuntu-latest
    name: Backend + DB Integration Test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create Docker network
        run: docker network create edhub-network

      - name: Build system_db
        run: docker build -t edhub-system-db ./database/system

      - name: Build filestorage_db
        run: docker build -t edhub-filestorage-db ./database/filestorage

      - name: Build backend
        run: docker build -t edhub-backend ./backend

      - name: Run system_db container
        run: |
          docker run -d \
            --name system_db \
            --network edhub-network \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=12345678 \
            -e POSTGRES_DB=edhub \
            -e PGDATA=/var/lib/postgresql/data \
            edhub-system-db

      - name: Run filestorage_db container
        run: |
          docker run -d \
            --name filestorage_db \
            --network edhub-network \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=12345678 \
            -e POSTGRES_DB=edhub_storage \
            -e PGDATA=/var/lib/postgresql/data \
            edhub-filestorage-db
      
      - name: Wait for system_db to be ready
        run: |
          until docker exec system_db pg_isready -U postgres; do
            sleep 1
          done

      - name: Wait for filestorage_db to be ready  
        run: |
          until docker exec filestorage_db pg_isready -U postgres; do
            sleep 1
          done
          sleep 3

      - name: Run backend container
        run: |
          docker run -d \
            --name backend \
            --network edhub-network \
            -p 8000:8000 \
            -e DATABASE_URL=postgresql://postgres:12345678@system_db:5432/edhub \
            edhub-backend

      - name: Wait for services
        run: sleep 20

      - name: Check backend API
        run: curl -f http://localhost:8000/openapi.json || (docker logs backend && docker logs system_db && docker logs filestorage_db && exit 1)

      - name: Stop containers
        if: always()
        run: |
          docker stop backend system_db filestorage_db
          docker rm backend system_db filestorage_db
          docker network rm edhub-network

  curltests:
    runs-on: ubuntu-latest
    name: Logical curl tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create Docker network
        run: docker network create edhub-network

      - name: Build system_db
        run: docker build -t edhub-system-db ./database/system

      - name: Build filestorage_db
        run: docker build -t edhub-filestorage-db ./database/filestorage

      - name: Build backend
        run: docker build -t edhub-backend ./backend

      - name: Run system_db container
        run: |
          docker run -d \
            --name system_db \
            --network edhub-network \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=12345678 \
            -e POSTGRES_DB=edhub \
            -e PGDATA=/var/lib/postgresql/data \
            edhub-system-db

      - name: Run filestorage_db container
        run: |
          docker run -d \
            --name filestorage_db \
            --network edhub-network \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=12345678 \
            -e POSTGRES_DB=edhub_storage \
            -e PGDATA=/var/lib/postgresql/data \
            edhub-filestorage-db
    
      - name: Wait for system_db to be ready
        run: |
          until docker exec system_db pg_isready -U postgres; do
            echo "Waiting for system_db..."
            sleep 1
          done

      - name: Wait for filestorage_db to be ready  
        run: |
          until docker exec filestorage_db pg_isready -U postgres; do
            echo "Waiting for filestorage_db..."
            sleep 1
          done
          sleep 3

      - name: Run backend container
        run: |
          docker run -d \
            --name backend \
            --network edhub-network \
            -p 8000:8000 \
            -e DATABASE_URL=postgresql://postgres:12345678@system_db:5432/edhub \
            edhub-backend

      - name: Wait for backend to be ready
        run: |
          until curl -s -f http://localhost:8000/openapi.json >/dev/null 2>&1; do
            echo "Waiting for backend..."
            sleep 1
          done

      - name: Run curltests.sh
        run: |
          chmod +x ./backend/curltests.sh
          sed -i 's|http://localhost/api|http://localhost:8000/api|' ./backend/curltests.sh
          ./backend/curltests.sh

      - name: Stop containers
        if: always()
        run: |
          docker stop backend system_db filestorage_db
          docker rm backend system_db filestorage_db
          docker network rm edhub-network